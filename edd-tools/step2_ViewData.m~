clear all
close all
clc

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% INSTRUMENT
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
TOA  = 6.97005;
ChToEnergyConversion  = [0.0925699 -0.0754175];
MeasurementPlane    = 'h';

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% MATERIAL
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% BCC Fe
latticeParms    = 2.82 ;                        % IN Angstrom
hkls            = load('bcc.hkls');
d_hkl           = PlaneSpacings(latticeParms, 'cubic', hkls');
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% PAR FILE DESIGNATION
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
pname_pypar     = './strain-examples/';
fname_pypar     = 'mach_feb15_TOA_7_Lap7_1.pypar';
pfname_pypar    = fullfile(pname_pypar, fname_pypar);
pardata         = ReadPythonParFile(pfname_pypar);

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% PATH WHERE DATA FILES LIVE
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
pname_data  = './strain-examples/Lap7/';

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% END OF INPUTS
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
lambda_hkl  = 2.*d_hkl*sind(TOA/2);
E_hkl       = Angstrom2keV(lambda_hkl);

E_grid  = 1:1:2048;
E_grid  = ChToEnergyConversion(1)*E_grid + ChToEnergyConversion(2);

numDV   = length(pardata.day);
data    = zeros(2048,1);
data_stack  = zeros(2048,numDV);
for i = 1:1:numDV
    if strcmpi(MeasurementPlane, 'h')
        fname   = pardata.HorzFileName{i}(1:end-1);
    elseif strcmpi(MeasurementPlane, 'v')
        fname   = pardata.VertFileName{i}(1:end-1);
    end
    
    pfname  = fullfile(pname_data, fname);
    datai	= load(pfname);
    data    = data + datai;
    data_stack(:,i)   = datai;
end

figure,
imagesc(data_stack)
yLabelTick  = str2num(get(gca, 'YTickLabel'));
yLabelTick  = ChToEnergyConversion(1)*yLabelTick
xlabel('data number')
return
figure,
subplot(2,1,1)
plot(E_grid, data_H, 'k.')
hold on
plot(E_hkl, ones(length(E_hkl), 1), 'b^')
grid on
xlabel('Energy (keV)')
ylabel('counts')

subplot(2,1,2)
plot(E_grid, data_V, 'k.')
return
figure,
imagesc(log(dataStack))
set(gca, 'YTickLabel', num2str(round(str2num(get(gca, 'YTickLabel'))*ChToEnergyConversion(1) + ChToEnergyConversion(2))))
title('horz')
xlabel('data point number')
ylabel('Channel Number => Energy')
